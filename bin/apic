#!/usr/bin/env node

var fs = require('fs'),
    path = require('path'),
    cp = require('child_process'),
    program = require('commander'),
    package = require('../package.json');

program
    .version(package.version)
    .usage('-w <input> -o <output> -app <name>')
    .option('-w, --wadl <path>', 'source WADL file')
    .option('-o, --output <path>', 'target descriptor file')
    .option('-c, --config <name>', 'application config')
    .parse(process.argv);

if (!program.wadl || !program.output) {
    console.error(program.usage());
    process.exit(1);
}

var input = path.resolve(process.cwd(), program.wadl),
    output = path.resolve(process.cwd(), program.output),
    application = program.application,
    xslt = path.resolve(__dirname, '../xsl/convert.xsl');

if (!fs.existsSync(input)) {
    console.error('WADL file not found');
    process.exit(1);
}

var cmd = 'xsltproc --nonet --xinclude --novalid --noout ' + (application ? ('--stringparam config ' + config + ' ') : '') + '--output ' + output + ' ' + xslt + ' ' + input;

cp.exec(cmd, { cwd: __dirname }, function(err, stdout, stderr) {
    if (err) {
        console.error(stderr);
        process.exit(1);
    }

    console.log(stdout);
});
